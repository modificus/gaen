//------------------------------------------------------------------------------
// start.cmp - startup script, run by default if no other entity is specified
//
// Gaen Concurrency Engine - http://gaen.org
// Copyright (c) 2014 Lachlan Orr
//
// This software is provided 'as-is', without any express or implied
// warranty. In no event will the authors be held liable for any damages
// arising from the use of this software.
//
// Permission is granted to anyone to use this software for any purpose,
// including commercial applications, and to alter it and redistribute it
// freely, subject to the following restrictions:
//
//   1. The origin of this software must not be misrepresented; you must not
//   claim that you wrote the original software. If you use this software
//   in a product, an acknowledgment in the product documentation would be
//   appreciated but is not required.
//
//   2. Altered source versions must be plainly marked as such, and must not be
//   misrepresented as being the original software.
//
//   3. This notice may not be removed or altered from any source
//   distribution.
//------------------------------------------------------------------------------

import lib.models;

entity start
{

    float angle = 0.0;
    handle boxModel = create_shape_box(vec3(1.0, 1.0, 1.0), color(0, 0, 255, 255));
    uint boxModelUid = renderer_gen_uid();
    uint lightUid = renderer_gen_uid();

    components
    {
        Timer(timer_interval = 0.016,
              timer_message = #tick);
    }

    #init()
    {
        renderer_insert_model_instance(boxModelUid, boxModel, mat34(1.0));
        renderer_insert_light_distant(lightUid, vec3(0.5, 0.0, -0.5), color(255, 255, 255, 255));
    }

    #update(float deltaSecs)
    {
        float f = deltaSecs;
        int x = 5;
        x = 6;
    }

    #timer(uint timer_msg)
    {
        angle += 2.0;
        float radAngle = radians(angle);
        vec3 angles = vec3(1.0, radAngle, 0.0);
        mat34 transform = transform_rotate(angles);

        if (timer_msg == #tick)
            renderer_transform_model_instance(boxModelUid, transform);
    }

}
