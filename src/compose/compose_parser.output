Terminals unused in grammar

   CHAR
   VEC4
   MAT3
   MAT34
   MAT4
   SWITCH
   CASE
   DEFAULT
   BREAK
   RETURN
   '|'
   '&'
   '.'
   '['
   ']'
   SCOPE


Grammar

    0 $accept: def_list $end

    1 def_list: def
    2         | def_list def

    3 def: ENTITY IDENTIFIER message_block
    4    | COMPONENT IDENTIFIER message_block
    5    | type IDENTIFIER '(' param_list ')' block

    6 message_block: '{' '}'
    7              | '{' message_list '}'

    8 message_list: message_prop
    9             | message_list message_prop

   10 message_prop: '#' IDENTIFIER '(' param_list ')' block
   11             | type '#' IDENTIFIER ';'
   12             | type '#' IDENTIFIER '=' expr ';'
   13             | type IDENTIFIER ';'
   14             | type IDENTIFIER '=' expr ';'

   15 param_list: /* empty */
   16           | type IDENTIFIER
   17           | param_list ',' type IDENTIFIER

   18 block: '{' '}'
   19      | '{' stmt_list '}'

   20 stmt_list: stmt
   21          | stmt_list stmt

   22 stmt: IF '(' cond_expr ')' stmt
   23     | IF '(' cond_expr ')' stmt ELSE stmt
   24     | WHILE '(' cond_expr ')' stmt
   25     | DO do_stmt WHILE '(' cond_expr ')' ';'
   26     | FOR '(' expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty ')' stmt
   27     | '@' target_expr ':' component_expr '#' IDENTIFIER '=' expr ';'
   28     | '@' target_expr ':' component_expr '#' IDENTIFIER '(' fun_params ')' ';'
   29     | block
   30     | expr ';'

   31 do_stmt: stmt

   32 target_expr: /* empty */
   33            | IDENTIFIER
   34            | INT_LITERAL

   35 component_expr: /* empty */
   36               | IDENTIFIER

   37 expr: '(' expr ')'
   38     | type IDENTIFIER
   39     | type IDENTIFIER '=' expr
   40     | cond_expr
   41     | expr '+' expr
   42     | expr '-' expr
   43     | expr '*' expr
   44     | expr '/' expr
   45     | expr '%' expr
   46     | expr LSHIFT expr
   47     | expr RSHIFT expr
   48     | expr AND expr
   49     | expr OR expr
   50     | expr '^' expr
   51     | IDENTIFIER '=' expr
   52     | IDENTIFIER ADD_ASSIGN expr
   53     | IDENTIFIER SUB_ASSIGN expr
   54     | IDENTIFIER MUL_ASSIGN expr
   55     | IDENTIFIER DIV_ASSIGN expr
   56     | IDENTIFIER MOD_ASSIGN expr
   57     | IDENTIFIER LSHIFT_ASSIGN expr
   58     | IDENTIFIER RSHIFT_ASSIGN expr
   59     | IDENTIFIER AND_ASSIGN expr
   60     | IDENTIFIER XOR_ASSIGN expr
   61     | IDENTIFIER OR_ASSIGN expr
   62     | '!' expr
   63     | '~' expr
   64     | '-' expr
   65     | INC expr
   66     | DEC expr
   67     | expr INC
   68     | expr DEC
   69     | literal
   70     | IDENTIFIER '(' fun_params ')'
   71     | IDENTIFIER

   72 cond_expr: expr EQ expr
   73          | expr NEQ expr
   74          | expr LTE expr
   75          | expr GTE expr
   76          | expr '<' expr
   77          | expr '>' expr

   78 literal: INT_LITERAL
   79        | FLOAT_LITERAL
   80        | TRUE
   81        | FALSE

   82 expr_or_empty: /* empty */
   83              | expr

   84 cond_expr_or_empty: /* empty */
   85                   | cond_expr

   86 fun_params: /* empty */
   87           | expr
   88           | fun_params ',' expr

   89 type: INT
   90     | UINT
   91     | FLOAT
   92     | BOOL
   93     | VEC3
   94     | VOID


Terminals, with rules where they appear

$end (0) 0
'!' (33) 62
'#' (35) 10 11 12 27 28
'%' (37) 45
'&' (38)
'(' (40) 5 10 22 23 24 25 26 28 37 70
')' (41) 5 10 22 23 24 25 26 28 37 70
'*' (42) 43
'+' (43) 41
',' (44) 17 88
'-' (45) 42 64
'.' (46)
'/' (47) 44
':' (58) 27 28
';' (59) 11 12 13 14 25 26 27 28 30
'<' (60) 76
'=' (61) 12 14 27 39 51
'>' (62) 77
'@' (64) 27 28
'[' (91)
']' (93)
'^' (94) 50
'{' (123) 6 7 18 19
'|' (124)
'}' (125) 6 7 18 19
'~' (126) 63
error (256)
IDENTIFIER (258) 3 4 5 10 11 12 13 14 16 17 27 28 33 36 38 39 51 52
    53 54 55 56 57 58 59 60 61 70 71
INT_LITERAL (259) 34 78
TRUE (260) 80
FALSE (261) 81
FLOAT_LITERAL (262) 79
INT (263) 89
UINT (264) 90
FLOAT (265) 91
BOOL (266) 92
CHAR (267)
VEC3 (268) 93
VEC4 (269)
MAT3 (270)
MAT34 (271)
MAT4 (272)
VOID (273) 94
IF (274) 22 23
SWITCH (275)
CASE (276)
DEFAULT (277)
FOR (278) 26
WHILE (279) 24 25
DO (280) 25
BREAK (281)
RETURN (282)
ENTITY (283) 3
COMPONENT (284) 4
THEN (285)
ELSE (286) 23
OR_ASSIGN (287) 61
XOR_ASSIGN (288) 60
AND_ASSIGN (289) 59
RSHIFT_ASSIGN (290) 58
LSHIFT_ASSIGN (291) 57
MOD_ASSIGN (292) 56
DIV_ASSIGN (293) 55
MUL_ASSIGN (294) 54
SUB_ASSIGN (295) 53
ADD_ASSIGN (296) 52
OR (297) 49
AND (298) 48
NEQ (299) 73
EQ (300) 72
GTE (301) 75
LTE (302) 74
RSHIFT (303) 47
LSHIFT (304) 46
DEC (305) 66 68
INC (306) 65 67
UMINUS (307)
POSTDEC (308)
POSTINC (309)
SCOPE (310)


Nonterminals, with rules where they appear

$accept (81)
    on left: 0
def_list (82)
    on left: 1 2, on right: 0 2
def (83)
    on left: 3 4 5, on right: 1 2
message_block (84)
    on left: 6 7, on right: 3 4
message_list (85)
    on left: 8 9, on right: 7 9
message_prop (86)
    on left: 10 11 12 13 14, on right: 8 9
param_list (87)
    on left: 15 16 17, on right: 5 10 17
block (88)
    on left: 18 19, on right: 5 10 29
stmt_list (89)
    on left: 20 21, on right: 19 21
stmt (90)
    on left: 22 23 24 25 26 27 28 29 30, on right: 20 21 22 23 24 26
    31
do_stmt (91)
    on left: 31, on right: 25
target_expr (92)
    on left: 32 33 34, on right: 27 28
component_expr (93)
    on left: 35 36, on right: 27 28
expr (94)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71, on right: 12
    14 27 30 37 39 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57 58 59 60 61 62 63 64 65 66 67 68 72 73 74 75 76 77 83 87 88
cond_expr (95)
    on left: 72 73 74 75 76 77, on right: 22 23 24 25 40 85
literal (96)
    on left: 78 79 80 81, on right: 69
expr_or_empty (97)
    on left: 82 83, on right: 26
cond_expr_or_empty (98)
    on left: 84 85, on right: 26
fun_params (99)
    on left: 86 87 88, on right: 28 70 88
type (100)
    on left: 89 90 91 92 93 94, on right: 5 11 12 13 14 16 17 38 39


State 0

    0 $accept: . def_list $end

    INT        shift, and go to state 1
    UINT       shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    VEC3       shift, and go to state 5
    VOID       shift, and go to state 6
    ENTITY     shift, and go to state 7
    COMPONENT  shift, and go to state 8

    def_list  go to state 9
    def       go to state 10
    type      go to state 11


State 1

   89 type: INT .

    $default  reduce using rule 89 (type)


State 2

   90 type: UINT .

    $default  reduce using rule 90 (type)


State 3

   91 type: FLOAT .

    $default  reduce using rule 91 (type)


State 4

   92 type: BOOL .

    $default  reduce using rule 92 (type)


State 5

   93 type: VEC3 .

    $default  reduce using rule 93 (type)


State 6

   94 type: VOID .

    $default  reduce using rule 94 (type)


State 7

    3 def: ENTITY . IDENTIFIER message_block

    IDENTIFIER  shift, and go to state 12


State 8

    4 def: COMPONENT . IDENTIFIER message_block

    IDENTIFIER  shift, and go to state 13


State 9

    0 $accept: def_list . $end
    2 def_list: def_list . def

    $end       shift, and go to state 14
    INT        shift, and go to state 1
    UINT       shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    VEC3       shift, and go to state 5
    VOID       shift, and go to state 6
    ENTITY     shift, and go to state 7
    COMPONENT  shift, and go to state 8

    def   go to state 15
    type  go to state 11


State 10

    1 def_list: def .

    $default  reduce using rule 1 (def_list)


State 11

    5 def: type . IDENTIFIER '(' param_list ')' block

    IDENTIFIER  shift, and go to state 16


State 12

    3 def: ENTITY IDENTIFIER . message_block

    '{'  shift, and go to state 17

    message_block  go to state 18


State 13

    4 def: COMPONENT IDENTIFIER . message_block

    '{'  shift, and go to state 17

    message_block  go to state 19


State 14

    0 $accept: def_list $end .

    $default  accept


State 15

    2 def_list: def_list def .

    $default  reduce using rule 2 (def_list)


State 16

    5 def: type IDENTIFIER . '(' param_list ')' block

    '('  shift, and go to state 20


State 17

    6 message_block: '{' . '}'
    7              | '{' . message_list '}'

    INT    shift, and go to state 1
    UINT   shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VEC3   shift, and go to state 5
    VOID   shift, and go to state 6
    '}'    shift, and go to state 21
    '#'    shift, and go to state 22

    message_list  go to state 23
    message_prop  go to state 24
    type          go to state 25


State 18

    3 def: ENTITY IDENTIFIER message_block .

    $default  reduce using rule 3 (def)


State 19

    4 def: COMPONENT IDENTIFIER message_block .

    $default  reduce using rule 4 (def)


State 20

    5 def: type IDENTIFIER '(' . param_list ')' block

    INT    shift, and go to state 1
    UINT   shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VEC3   shift, and go to state 5
    VOID   shift, and go to state 6

    $default  reduce using rule 15 (param_list)

    param_list  go to state 26
    type        go to state 27


State 21

    6 message_block: '{' '}' .

    $default  reduce using rule 6 (message_block)


State 22

   10 message_prop: '#' . IDENTIFIER '(' param_list ')' block

    IDENTIFIER  shift, and go to state 28


State 23

    7 message_block: '{' message_list . '}'
    9 message_list: message_list . message_prop

    INT    shift, and go to state 1
    UINT   shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VEC3   shift, and go to state 5
    VOID   shift, and go to state 6
    '}'    shift, and go to state 29
    '#'    shift, and go to state 22

    message_prop  go to state 30
    type          go to state 25


State 24

    8 message_list: message_prop .

    $default  reduce using rule 8 (message_list)


State 25

   11 message_prop: type . '#' IDENTIFIER ';'
   12             | type . '#' IDENTIFIER '=' expr ';'
   13             | type . IDENTIFIER ';'
   14             | type . IDENTIFIER '=' expr ';'

    IDENTIFIER  shift, and go to state 31
    '#'         shift, and go to state 32


State 26

    5 def: type IDENTIFIER '(' param_list . ')' block
   17 param_list: param_list . ',' type IDENTIFIER

    ')'  shift, and go to state 33
    ','  shift, and go to state 34


State 27

   16 param_list: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 35


State 28

   10 message_prop: '#' IDENTIFIER . '(' param_list ')' block

    '('  shift, and go to state 36


State 29

    7 message_block: '{' message_list '}' .

    $default  reduce using rule 7 (message_block)


State 30

    9 message_list: message_list message_prop .

    $default  reduce using rule 9 (message_list)


State 31

   13 message_prop: type IDENTIFIER . ';'
   14             | type IDENTIFIER . '=' expr ';'

    '='  shift, and go to state 37
    ';'  shift, and go to state 38


State 32

   11 message_prop: type '#' . IDENTIFIER ';'
   12             | type '#' . IDENTIFIER '=' expr ';'

    IDENTIFIER  shift, and go to state 39


State 33

    5 def: type IDENTIFIER '(' param_list ')' . block

    '{'  shift, and go to state 40

    block  go to state 41


State 34

   17 param_list: param_list ',' . type IDENTIFIER

    INT    shift, and go to state 1
    UINT   shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VEC3   shift, and go to state 5
    VOID   shift, and go to state 6

    type  go to state 42


State 35

   16 param_list: type IDENTIFIER .

    $default  reduce using rule 16 (param_list)


State 36

   10 message_prop: '#' IDENTIFIER '(' . param_list ')' block

    INT    shift, and go to state 1
    UINT   shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VEC3   shift, and go to state 5
    VOID   shift, and go to state 6

    $default  reduce using rule 15 (param_list)

    param_list  go to state 43
    type        go to state 27


State 37

   14 message_prop: type IDENTIFIER '=' . expr ';'

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 55
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 38

   13 message_prop: type IDENTIFIER ';' .

    $default  reduce using rule 13 (message_prop)


State 39

   11 message_prop: type '#' IDENTIFIER . ';'
   12             | type '#' IDENTIFIER . '=' expr ';'

    '='  shift, and go to state 59
    ';'  shift, and go to state 60


State 40

   18 block: '{' . '}'
   19      | '{' . stmt_list '}'

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 61
    FOR            shift, and go to state 62
    WHILE          shift, and go to state 63
    DO             shift, and go to state 64
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54
    '{'            shift, and go to state 40
    '}'            shift, and go to state 65
    '@'            shift, and go to state 66

    block      go to state 67
    stmt_list  go to state 68
    stmt       go to state 69
    expr       go to state 70
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 41

    5 def: type IDENTIFIER '(' param_list ')' block .

    $default  reduce using rule 5 (def)


State 42

   17 param_list: param_list ',' type . IDENTIFIER

    IDENTIFIER  shift, and go to state 71


State 43

   10 message_prop: '#' IDENTIFIER '(' param_list . ')' block
   17 param_list: param_list . ',' type IDENTIFIER

    ')'  shift, and go to state 72
    ','  shift, and go to state 34


State 44

   51 expr: IDENTIFIER . '=' expr
   52     | IDENTIFIER . ADD_ASSIGN expr
   53     | IDENTIFIER . SUB_ASSIGN expr
   54     | IDENTIFIER . MUL_ASSIGN expr
   55     | IDENTIFIER . DIV_ASSIGN expr
   56     | IDENTIFIER . MOD_ASSIGN expr
   57     | IDENTIFIER . LSHIFT_ASSIGN expr
   58     | IDENTIFIER . RSHIFT_ASSIGN expr
   59     | IDENTIFIER . AND_ASSIGN expr
   60     | IDENTIFIER . XOR_ASSIGN expr
   61     | IDENTIFIER . OR_ASSIGN expr
   70     | IDENTIFIER . '(' fun_params ')'
   71     | IDENTIFIER .

    '='            shift, and go to state 73
    OR_ASSIGN      shift, and go to state 74
    XOR_ASSIGN     shift, and go to state 75
    AND_ASSIGN     shift, and go to state 76
    RSHIFT_ASSIGN  shift, and go to state 77
    LSHIFT_ASSIGN  shift, and go to state 78
    MOD_ASSIGN     shift, and go to state 79
    DIV_ASSIGN     shift, and go to state 80
    MUL_ASSIGN     shift, and go to state 81
    SUB_ASSIGN     shift, and go to state 82
    ADD_ASSIGN     shift, and go to state 83
    '('            shift, and go to state 84

    $default  reduce using rule 71 (expr)


State 45

   78 literal: INT_LITERAL .

    $default  reduce using rule 78 (literal)


State 46

   80 literal: TRUE .

    $default  reduce using rule 80 (literal)


State 47

   81 literal: FALSE .

    $default  reduce using rule 81 (literal)


State 48

   79 literal: FLOAT_LITERAL .

    $default  reduce using rule 79 (literal)


State 49

   64 expr: '-' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 85
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 50

   62 expr: '!' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 86
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 51

   63 expr: '~' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 87
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 52

   66 expr: DEC . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 88
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 53

   65 expr: INC . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 89
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 54

   37 expr: '(' . expr ')'

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 90
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 55

   14 message_prop: type IDENTIFIER '=' expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108
    ';'     shift, and go to state 109


State 56

   40 expr: cond_expr .

    $default  reduce using rule 40 (expr)


State 57

   69 expr: literal .

    $default  reduce using rule 69 (expr)


State 58

   38 expr: type . IDENTIFIER
   39     | type . IDENTIFIER '=' expr

    IDENTIFIER  shift, and go to state 110


State 59

   12 message_prop: type '#' IDENTIFIER '=' . expr ';'

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 111
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 60

   11 message_prop: type '#' IDENTIFIER ';' .

    $default  reduce using rule 11 (message_prop)


State 61

   22 stmt: IF . '(' cond_expr ')' stmt
   23     | IF . '(' cond_expr ')' stmt ELSE stmt

    '('  shift, and go to state 112


State 62

   26 stmt: FOR . '(' expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty ')' stmt

    '('  shift, and go to state 113


State 63

   24 stmt: WHILE . '(' cond_expr ')' stmt

    '('  shift, and go to state 114


State 64

   25 stmt: DO . do_stmt WHILE '(' cond_expr ')' ';'

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 61
    FOR            shift, and go to state 62
    WHILE          shift, and go to state 63
    DO             shift, and go to state 64
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54
    '{'            shift, and go to state 40
    '@'            shift, and go to state 66

    block      go to state 67
    stmt       go to state 115
    do_stmt    go to state 116
    expr       go to state 70
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 65

   18 block: '{' '}' .

    $default  reduce using rule 18 (block)


State 66

   27 stmt: '@' . target_expr ':' component_expr '#' IDENTIFIER '=' expr ';'
   28     | '@' . target_expr ':' component_expr '#' IDENTIFIER '(' fun_params ')' ';'

    IDENTIFIER   shift, and go to state 117
    INT_LITERAL  shift, and go to state 118

    $default  reduce using rule 32 (target_expr)

    target_expr  go to state 119


State 67

   29 stmt: block .

    $default  reduce using rule 29 (stmt)


State 68

   19 block: '{' stmt_list . '}'
   21 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 61
    FOR            shift, and go to state 62
    WHILE          shift, and go to state 63
    DO             shift, and go to state 64
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54
    '{'            shift, and go to state 40
    '}'            shift, and go to state 120
    '@'            shift, and go to state 66

    block      go to state 67
    stmt       go to state 121
    expr       go to state 70
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 69

   20 stmt_list: stmt .

    $default  reduce using rule 20 (stmt_list)


State 70

   30 stmt: expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108
    ';'     shift, and go to state 122


State 71

   17 param_list: param_list ',' type IDENTIFIER .

    $default  reduce using rule 17 (param_list)


State 72

   10 message_prop: '#' IDENTIFIER '(' param_list ')' . block

    '{'  shift, and go to state 40

    block  go to state 123


State 73

   51 expr: IDENTIFIER '=' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 124
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 74

   61 expr: IDENTIFIER OR_ASSIGN . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 125
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 75

   60 expr: IDENTIFIER XOR_ASSIGN . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 126
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 76

   59 expr: IDENTIFIER AND_ASSIGN . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 127
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 77

   58 expr: IDENTIFIER RSHIFT_ASSIGN . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 128
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 78

   57 expr: IDENTIFIER LSHIFT_ASSIGN . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 129
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 79

   56 expr: IDENTIFIER MOD_ASSIGN . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 130
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 80

   55 expr: IDENTIFIER DIV_ASSIGN . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 131
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 81

   54 expr: IDENTIFIER MUL_ASSIGN . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 132
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 82

   53 expr: IDENTIFIER SUB_ASSIGN . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 133
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 83

   52 expr: IDENTIFIER ADD_ASSIGN . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 134
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 84

   70 expr: IDENTIFIER '(' . fun_params ')'

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    $default  reduce using rule 86 (fun_params)

    expr        go to state 135
    cond_expr   go to state 56
    literal     go to state 57
    fun_params  go to state 136
    type        go to state 58


State 85

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   64     | '-' expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    $default  reduce using rule 64 (expr)


State 86

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   62     | '!' expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    DEC  shift, and go to state 107
    INC  shift, and go to state 108

    $default  reduce using rule 62 (expr)


State 87

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   63     | '~' expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    DEC  shift, and go to state 107
    INC  shift, and go to state 108

    $default  reduce using rule 63 (expr)


State 88

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   66     | DEC expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    DEC  shift, and go to state 107
    INC  shift, and go to state 108

    $default  reduce using rule 66 (expr)


State 89

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   65     | INC expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    DEC  shift, and go to state 107
    INC  shift, and go to state 108

    $default  reduce using rule 65 (expr)


State 90

   37 expr: '(' expr . ')'
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108
    ')'     shift, and go to state 137


State 91

   49 expr: expr OR . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 138
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 92

   48 expr: expr AND . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 139
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 93

   50 expr: expr '^' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 140
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 94

   73 cond_expr: expr NEQ . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 141
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 95

   72 cond_expr: expr EQ . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 142
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 96

   76 cond_expr: expr '<' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 143
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 97

   77 cond_expr: expr '>' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 144
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 98

   75 cond_expr: expr GTE . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 145
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 99

   74 cond_expr: expr LTE . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 146
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 100

   47 expr: expr RSHIFT . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 147
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 101

   46 expr: expr LSHIFT . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 148
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 102

   41 expr: expr '+' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 149
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 103

   42 expr: expr '-' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 150
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 104

   43 expr: expr '*' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 151
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 105

   44 expr: expr '/' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 152
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 106

   45 expr: expr '%' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 153
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 107

   68 expr: expr DEC .

    $default  reduce using rule 68 (expr)


State 108

   67 expr: expr INC .

    $default  reduce using rule 67 (expr)


State 109

   14 message_prop: type IDENTIFIER '=' expr ';' .

    $default  reduce using rule 14 (message_prop)


State 110

   38 expr: type IDENTIFIER .
   39     | type IDENTIFIER . '=' expr

    '='  shift, and go to state 154

    $default  reduce using rule 38 (expr)


State 111

   12 message_prop: type '#' IDENTIFIER '=' expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108
    ';'     shift, and go to state 155


State 112

   22 stmt: IF '(' . cond_expr ')' stmt
   23     | IF '(' . cond_expr ')' stmt ELSE stmt

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 156
    cond_expr  go to state 157
    literal    go to state 57
    type       go to state 58


State 113

   26 stmt: FOR '(' . expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty ')' stmt

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    $default  reduce using rule 82 (expr_or_empty)

    expr           go to state 158
    cond_expr      go to state 56
    literal        go to state 57
    expr_or_empty  go to state 159
    type           go to state 58


State 114

   24 stmt: WHILE '(' . cond_expr ')' stmt

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 156
    cond_expr  go to state 160
    literal    go to state 57
    type       go to state 58


State 115

   31 do_stmt: stmt .

    $default  reduce using rule 31 (do_stmt)


State 116

   25 stmt: DO do_stmt . WHILE '(' cond_expr ')' ';'

    WHILE  shift, and go to state 161


State 117

   33 target_expr: IDENTIFIER .

    $default  reduce using rule 33 (target_expr)


State 118

   34 target_expr: INT_LITERAL .

    $default  reduce using rule 34 (target_expr)


State 119

   27 stmt: '@' target_expr . ':' component_expr '#' IDENTIFIER '=' expr ';'
   28     | '@' target_expr . ':' component_expr '#' IDENTIFIER '(' fun_params ')' ';'

    ':'  shift, and go to state 162


State 120

   19 block: '{' stmt_list '}' .

    $default  reduce using rule 19 (block)


State 121

   21 stmt_list: stmt_list stmt .

    $default  reduce using rule 21 (stmt_list)


State 122

   30 stmt: expr ';' .

    $default  reduce using rule 30 (stmt)


State 123

   10 message_prop: '#' IDENTIFIER '(' param_list ')' block .

    $default  reduce using rule 10 (message_prop)


State 124

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   51     | IDENTIFIER '=' expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 51 (expr)


State 125

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   61     | IDENTIFIER OR_ASSIGN expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 61 (expr)


State 126

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   60     | IDENTIFIER XOR_ASSIGN expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 60 (expr)


State 127

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   59     | IDENTIFIER AND_ASSIGN expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 59 (expr)


State 128

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   58     | IDENTIFIER RSHIFT_ASSIGN expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 58 (expr)


State 129

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   57     | IDENTIFIER LSHIFT_ASSIGN expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 57 (expr)


State 130

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   56     | IDENTIFIER MOD_ASSIGN expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 56 (expr)


State 131

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   55     | IDENTIFIER DIV_ASSIGN expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 55 (expr)


State 132

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   54     | IDENTIFIER MUL_ASSIGN expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 54 (expr)


State 133

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   53     | IDENTIFIER SUB_ASSIGN expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 53 (expr)


State 134

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   52     | IDENTIFIER ADD_ASSIGN expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 52 (expr)


State 135

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr
   87 fun_params: expr .

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 87 (fun_params)


State 136

   70 expr: IDENTIFIER '(' fun_params . ')'
   88 fun_params: fun_params . ',' expr

    ')'  shift, and go to state 163
    ','  shift, and go to state 164


State 137

   37 expr: '(' expr ')' .

    $default  reduce using rule 37 (expr)


State 138

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   49     | expr OR expr .
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 49 (expr)


State 139

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   48     | expr AND expr .
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 48 (expr)


State 140

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   50     | expr '^' expr .
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 50 (expr)


State 141

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   73          | expr NEQ expr .
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 73 (cond_expr)


State 142

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   72          | expr EQ expr .
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 72 (cond_expr)


State 143

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   76          | expr '<' expr .
   77          | expr . '>' expr

    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    GTE  error (nonassociative)
    LTE  error (nonassociative)

    $default  reduce using rule 76 (cond_expr)


State 144

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr
   77          | expr '>' expr .

    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    GTE  error (nonassociative)
    LTE  error (nonassociative)

    $default  reduce using rule 77 (cond_expr)


State 145

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   75          | expr GTE expr .
   76          | expr . '<' expr
   77          | expr . '>' expr

    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    GTE  error (nonassociative)
    LTE  error (nonassociative)

    $default  reduce using rule 75 (cond_expr)


State 146

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   74          | expr LTE expr .
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    GTE  error (nonassociative)
    LTE  error (nonassociative)

    $default  reduce using rule 74 (cond_expr)


State 147

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   47     | expr RSHIFT expr .
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105
    '%'  shift, and go to state 106
    DEC  shift, and go to state 107
    INC  shift, and go to state 108

    $default  reduce using rule 47 (expr)


State 148

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   46     | expr LSHIFT expr .
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    '+'  shift, and go to state 102
    '-'  shift, and go to state 103
    '*'  shift, and go to state 104
    '/'  shift, and go to state 105
    '%'  shift, and go to state 106
    DEC  shift, and go to state 107
    INC  shift, and go to state 108

    $default  reduce using rule 46 (expr)


State 149

   41 expr: expr . '+' expr
   41     | expr '+' expr .
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    '*'  shift, and go to state 104
    '/'  shift, and go to state 105
    '%'  shift, and go to state 106
    DEC  shift, and go to state 107
    INC  shift, and go to state 108

    $default  reduce using rule 41 (expr)


State 150

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   42     | expr '-' expr .
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    '*'  shift, and go to state 104
    '/'  shift, and go to state 105
    '%'  shift, and go to state 106
    DEC  shift, and go to state 107
    INC  shift, and go to state 108

    $default  reduce using rule 42 (expr)


State 151

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   43     | expr '*' expr .
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    DEC  shift, and go to state 107
    INC  shift, and go to state 108

    $default  reduce using rule 43 (expr)


State 152

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   44     | expr '/' expr .
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    DEC  shift, and go to state 107
    INC  shift, and go to state 108

    $default  reduce using rule 44 (expr)


State 153

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   45     | expr '%' expr .
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    DEC  shift, and go to state 107
    INC  shift, and go to state 108

    $default  reduce using rule 45 (expr)


State 154

   39 expr: type IDENTIFIER '=' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 165
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 155

   12 message_prop: type '#' IDENTIFIER '=' expr ';' .

    $default  reduce using rule 12 (message_prop)


State 156

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108


State 157

   22 stmt: IF '(' cond_expr . ')' stmt
   23     | IF '(' cond_expr . ')' stmt ELSE stmt
   40 expr: cond_expr .

    ')'  shift, and go to state 166

    $default  reduce using rule 40 (expr)


State 158

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr
   83 expr_or_empty: expr .

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 83 (expr_or_empty)


State 159

   26 stmt: FOR '(' expr_or_empty . ';' cond_expr_or_empty ';' expr_or_empty ')' stmt

    ';'  shift, and go to state 167


State 160

   24 stmt: WHILE '(' cond_expr . ')' stmt
   40 expr: cond_expr .

    ')'  shift, and go to state 168

    $default  reduce using rule 40 (expr)


State 161

   25 stmt: DO do_stmt WHILE . '(' cond_expr ')' ';'

    '('  shift, and go to state 169


State 162

   27 stmt: '@' target_expr ':' . component_expr '#' IDENTIFIER '=' expr ';'
   28     | '@' target_expr ':' . component_expr '#' IDENTIFIER '(' fun_params ')' ';'

    IDENTIFIER  shift, and go to state 170

    $default  reduce using rule 35 (component_expr)

    component_expr  go to state 171


State 163

   70 expr: IDENTIFIER '(' fun_params ')' .

    $default  reduce using rule 70 (expr)


State 164

   88 fun_params: fun_params ',' . expr

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 172
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 165

   39 expr: type IDENTIFIER '=' expr .
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 39 (expr)


State 166

   22 stmt: IF '(' cond_expr ')' . stmt
   23     | IF '(' cond_expr ')' . stmt ELSE stmt

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 61
    FOR            shift, and go to state 62
    WHILE          shift, and go to state 63
    DO             shift, and go to state 64
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54
    '{'            shift, and go to state 40
    '@'            shift, and go to state 66

    block      go to state 67
    stmt       go to state 173
    expr       go to state 70
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 167

   26 stmt: FOR '(' expr_or_empty ';' . cond_expr_or_empty ';' expr_or_empty ')' stmt

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    $default  reduce using rule 84 (cond_expr_or_empty)

    expr                go to state 156
    cond_expr           go to state 174
    literal             go to state 57
    cond_expr_or_empty  go to state 175
    type                go to state 58


State 168

   24 stmt: WHILE '(' cond_expr ')' . stmt

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 61
    FOR            shift, and go to state 62
    WHILE          shift, and go to state 63
    DO             shift, and go to state 64
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54
    '{'            shift, and go to state 40
    '@'            shift, and go to state 66

    block      go to state 67
    stmt       go to state 176
    expr       go to state 70
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 169

   25 stmt: DO do_stmt WHILE '(' . cond_expr ')' ';'

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 156
    cond_expr  go to state 177
    literal    go to state 57
    type       go to state 58


State 170

   36 component_expr: IDENTIFIER .

    $default  reduce using rule 36 (component_expr)


State 171

   27 stmt: '@' target_expr ':' component_expr . '#' IDENTIFIER '=' expr ';'
   28     | '@' target_expr ':' component_expr . '#' IDENTIFIER '(' fun_params ')' ';'

    '#'  shift, and go to state 178


State 172

   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr
   88 fun_params: fun_params ',' expr .

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108

    $default  reduce using rule 88 (fun_params)


State 173

   22 stmt: IF '(' cond_expr ')' stmt .
   23     | IF '(' cond_expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 179

    $default  reduce using rule 22 (stmt)


State 174

   40 expr: cond_expr .
   85 cond_expr_or_empty: cond_expr .

    ';'       reduce using rule 85 (cond_expr_or_empty)
    $default  reduce using rule 40 (expr)


State 175

   26 stmt: FOR '(' expr_or_empty ';' cond_expr_or_empty . ';' expr_or_empty ')' stmt

    ';'  shift, and go to state 180


State 176

   24 stmt: WHILE '(' cond_expr ')' stmt .

    $default  reduce using rule 24 (stmt)


State 177

   25 stmt: DO do_stmt WHILE '(' cond_expr . ')' ';'
   40 expr: cond_expr .

    ')'  shift, and go to state 181

    $default  reduce using rule 40 (expr)


State 178

   27 stmt: '@' target_expr ':' component_expr '#' . IDENTIFIER '=' expr ';'
   28     | '@' target_expr ':' component_expr '#' . IDENTIFIER '(' fun_params ')' ';'

    IDENTIFIER  shift, and go to state 182


State 179

   23 stmt: IF '(' cond_expr ')' stmt ELSE . stmt

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 61
    FOR            shift, and go to state 62
    WHILE          shift, and go to state 63
    DO             shift, and go to state 64
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54
    '{'            shift, and go to state 40
    '@'            shift, and go to state 66

    block      go to state 67
    stmt       go to state 183
    expr       go to state 70
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 180

   26 stmt: FOR '(' expr_or_empty ';' cond_expr_or_empty ';' . expr_or_empty ')' stmt

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    $default  reduce using rule 82 (expr_or_empty)

    expr           go to state 158
    cond_expr      go to state 56
    literal        go to state 57
    expr_or_empty  go to state 184
    type           go to state 58


State 181

   25 stmt: DO do_stmt WHILE '(' cond_expr ')' . ';'

    ';'  shift, and go to state 185


State 182

   27 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER . '=' expr ';'
   28     | '@' target_expr ':' component_expr '#' IDENTIFIER . '(' fun_params ')' ';'

    '='  shift, and go to state 186
    '('  shift, and go to state 187


State 183

   23 stmt: IF '(' cond_expr ')' stmt ELSE stmt .

    $default  reduce using rule 23 (stmt)


State 184

   26 stmt: FOR '(' expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty . ')' stmt

    ')'  shift, and go to state 188


State 185

   25 stmt: DO do_stmt WHILE '(' cond_expr ')' ';' .

    $default  reduce using rule 25 (stmt)


State 186

   27 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '=' . expr ';'

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    expr       go to state 189
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 187

   28 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '(' . fun_params ')' ';'

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54

    $default  reduce using rule 86 (fun_params)

    expr        go to state 135
    cond_expr   go to state 56
    literal     go to state 57
    fun_params  go to state 190
    type        go to state 58


State 188

   26 stmt: FOR '(' expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty ')' . stmt

    IDENTIFIER     shift, and go to state 44
    INT_LITERAL    shift, and go to state 45
    TRUE           shift, and go to state 46
    FALSE          shift, and go to state 47
    FLOAT_LITERAL  shift, and go to state 48
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 61
    FOR            shift, and go to state 62
    WHILE          shift, and go to state 63
    DO             shift, and go to state 64
    '-'            shift, and go to state 49
    '!'            shift, and go to state 50
    '~'            shift, and go to state 51
    DEC            shift, and go to state 52
    INC            shift, and go to state 53
    '('            shift, and go to state 54
    '{'            shift, and go to state 40
    '@'            shift, and go to state 66

    block      go to state 67
    stmt       go to state 191
    expr       go to state 70
    cond_expr  go to state 56
    literal    go to state 57
    type       go to state 58


State 189

   27 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '=' expr . ';'
   41 expr: expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . LSHIFT expr
   47     | expr . RSHIFT expr
   48     | expr . AND expr
   49     | expr . OR expr
   50     | expr . '^' expr
   67     | expr . INC
   68     | expr . DEC
   72 cond_expr: expr . EQ expr
   73          | expr . NEQ expr
   74          | expr . LTE expr
   75          | expr . GTE expr
   76          | expr . '<' expr
   77          | expr . '>' expr

    OR      shift, and go to state 91
    AND     shift, and go to state 92
    '^'     shift, and go to state 93
    NEQ     shift, and go to state 94
    EQ      shift, and go to state 95
    '<'     shift, and go to state 96
    '>'     shift, and go to state 97
    GTE     shift, and go to state 98
    LTE     shift, and go to state 99
    RSHIFT  shift, and go to state 100
    LSHIFT  shift, and go to state 101
    '+'     shift, and go to state 102
    '-'     shift, and go to state 103
    '*'     shift, and go to state 104
    '/'     shift, and go to state 105
    '%'     shift, and go to state 106
    DEC     shift, and go to state 107
    INC     shift, and go to state 108
    ';'     shift, and go to state 192


State 190

   28 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '(' fun_params . ')' ';'
   88 fun_params: fun_params . ',' expr

    ')'  shift, and go to state 193
    ','  shift, and go to state 164


State 191

   26 stmt: FOR '(' expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty ')' stmt .

    $default  reduce using rule 26 (stmt)


State 192

   27 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '=' expr ';' .

    $default  reduce using rule 27 (stmt)


State 193

   28 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '(' fun_params ')' . ';'

    ';'  shift, and go to state 194


State 194

   28 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '(' fun_params ')' ';' .

    $default  reduce using rule 28 (stmt)
