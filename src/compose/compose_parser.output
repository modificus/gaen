Terminals unused in grammar

   CHAR
   VEC4
   MAT3
   MAT34
   MAT4
   SWITCH
   CASE
   DEFAULT
   BREAK
   RETURN
   '|'
   '&'
   '.'
   '['
   ']'
   SCOPE


Grammar

    0 $accept: def_list $end

    1 def_list: def
    2         | def_list def

    3 def: ENTITY IDENTIFIER message_block
    4    | COMPONENT IDENTIFIER message_block
    5    | type IDENTIFIER '(' param_list ')' block

    6 message_block: '{' '}'
    7              | '{' message_list '}'

    8 message_list: message_prop
    9             | message_list message_prop

   10 message_prop: '#' IDENTIFIER '(' param_list ')' block
   11             | type '#' IDENTIFIER ';'
   12             | type '#' IDENTIFIER '=' expr ';'

   13 param_list: /* empty */
   14           | type IDENTIFIER
   15           | param_list ',' type IDENTIFIER

   16 block: '{' '}'
   17      | '{' stmt_list '}'

   18 stmt_list: stmt
   19          | stmt_list stmt

   20 stmt: IF '(' cond_expr ')' stmt
   21     | IF '(' cond_expr ')' stmt ELSE stmt
   22     | WHILE '(' cond_expr ')' stmt
   23     | DO do_stmt WHILE '(' cond_expr ')' ';'
   24     | FOR '(' expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty ')' stmt
   25     | '@' target_expr ':' component_expr '#' IDENTIFIER '=' expr ';'
   26     | '@' target_expr ':' component_expr '#' IDENTIFIER '(' fun_params ')' ';'
   27     | block
   28     | expr ';'

   29 do_stmt: stmt

   30 target_expr: /* empty */
   31            | IDENTIFIER
   32            | INT_LITERAL

   33 component_expr: /* empty */
   34               | IDENTIFIER

   35 expr: '(' expr ')'
   36     | type IDENTIFIER
   37     | type IDENTIFIER '=' expr
   38     | cond_expr
   39     | expr '+' expr
   40     | expr '-' expr
   41     | expr '*' expr
   42     | expr '/' expr
   43     | expr '%' expr
   44     | expr LSHIFT expr
   45     | expr RSHIFT expr
   46     | expr AND expr
   47     | expr OR expr
   48     | expr '^' expr
   49     | IDENTIFIER '=' expr
   50     | IDENTIFIER ADD_ASSIGN expr
   51     | IDENTIFIER SUB_ASSIGN expr
   52     | IDENTIFIER MUL_ASSIGN expr
   53     | IDENTIFIER DIV_ASSIGN expr
   54     | IDENTIFIER MOD_ASSIGN expr
   55     | IDENTIFIER LSHIFT_ASSIGN expr
   56     | IDENTIFIER RSHIFT_ASSIGN expr
   57     | IDENTIFIER AND_ASSIGN expr
   58     | IDENTIFIER XOR_ASSIGN expr
   59     | IDENTIFIER OR_ASSIGN expr
   60     | '!' expr
   61     | '~' expr
   62     | '-' expr
   63     | INC expr
   64     | DEC expr
   65     | expr INC
   66     | expr DEC
   67     | literal
   68     | IDENTIFIER '(' fun_params ')'
   69     | IDENTIFIER

   70 cond_expr: expr EQ expr
   71          | expr NEQ expr
   72          | expr LTE expr
   73          | expr GTE expr
   74          | expr '<' expr
   75          | expr '>' expr

   76 literal: INT_LITERAL
   77        | FLOAT_LITERAL
   78        | TRUE
   79        | FALSE

   80 expr_or_empty: /* empty */
   81              | expr

   82 cond_expr_or_empty: /* empty */
   83                   | cond_expr

   84 fun_params: /* empty */
   85           | expr
   86           | fun_params ',' expr

   87 type: INT
   88     | UINT
   89     | FLOAT
   90     | BOOL
   91     | VEC3
   92     | VOID


Terminals, with rules where they appear

$end (0) 0
'!' (33) 60
'#' (35) 10 11 12 25 26
'%' (37) 43
'&' (38)
'(' (40) 5 10 20 21 22 23 24 26 35 68
')' (41) 5 10 20 21 22 23 24 26 35 68
'*' (42) 41
'+' (43) 39
',' (44) 15 86
'-' (45) 40 62
'.' (46)
'/' (47) 42
':' (58) 25 26
';' (59) 11 12 23 24 25 26 28
'<' (60) 74
'=' (61) 12 25 37 49
'>' (62) 75
'@' (64) 25 26
'[' (91)
']' (93)
'^' (94) 48
'{' (123) 6 7 16 17
'|' (124)
'}' (125) 6 7 16 17
'~' (126) 61
error (256)
IDENTIFIER (258) 3 4 5 10 11 12 14 15 25 26 31 34 36 37 49 50 51 52
    53 54 55 56 57 58 59 68 69
INT_LITERAL (259) 32 76
TRUE (260) 78
FALSE (261) 79
FLOAT_LITERAL (262) 77
INT (263) 87
UINT (264) 88
FLOAT (265) 89
BOOL (266) 90
CHAR (267)
VEC3 (268) 91
VEC4 (269)
MAT3 (270)
MAT34 (271)
MAT4 (272)
VOID (273) 92
IF (274) 20 21
SWITCH (275)
CASE (276)
DEFAULT (277)
FOR (278) 24
WHILE (279) 22 23
DO (280) 23
BREAK (281)
RETURN (282)
ENTITY (283) 3
COMPONENT (284) 4
THEN (285)
ELSE (286) 21
OR_ASSIGN (287) 59
XOR_ASSIGN (288) 58
AND_ASSIGN (289) 57
RSHIFT_ASSIGN (290) 56
LSHIFT_ASSIGN (291) 55
MOD_ASSIGN (292) 54
DIV_ASSIGN (293) 53
MUL_ASSIGN (294) 52
SUB_ASSIGN (295) 51
ADD_ASSIGN (296) 50
OR (297) 47
AND (298) 46
NEQ (299) 71
EQ (300) 70
GTE (301) 73
LTE (302) 72
RSHIFT (303) 45
LSHIFT (304) 44
DEC (305) 64 66
INC (306) 63 65
UMINUS (307)
POSTDEC (308)
POSTINC (309)
SCOPE (310)


Nonterminals, with rules where they appear

$accept (81)
    on left: 0
def_list (82)
    on left: 1 2, on right: 0 2
def (83)
    on left: 3 4 5, on right: 1 2
message_block (84)
    on left: 6 7, on right: 3 4
message_list (85)
    on left: 8 9, on right: 7 9
message_prop (86)
    on left: 10 11 12, on right: 8 9
param_list (87)
    on left: 13 14 15, on right: 5 10 15
block (88)
    on left: 16 17, on right: 5 10 27
stmt_list (89)
    on left: 18 19, on right: 17 19
stmt (90)
    on left: 20 21 22 23 24 25 26 27 28, on right: 18 19 20 21 22 24
    29
do_stmt (91)
    on left: 29, on right: 23
target_expr (92)
    on left: 30 31 32, on right: 25 26
component_expr (93)
    on left: 33 34, on right: 25 26
expr (94)
    on left: 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
    53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69, on right: 12
    25 28 35 37 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56 57 58 59 60 61 62 63 64 65 66 70 71 72 73 74 75 81 85 86
cond_expr (95)
    on left: 70 71 72 73 74 75, on right: 20 21 22 23 38 83
literal (96)
    on left: 76 77 78 79, on right: 67
expr_or_empty (97)
    on left: 80 81, on right: 24
cond_expr_or_empty (98)
    on left: 82 83, on right: 24
fun_params (99)
    on left: 84 85 86, on right: 26 68 86
type (100)
    on left: 87 88 89 90 91 92, on right: 5 11 12 14 15 36 37


State 0

    0 $accept: . def_list $end

    INT        shift, and go to state 1
    UINT       shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    VEC3       shift, and go to state 5
    VOID       shift, and go to state 6
    ENTITY     shift, and go to state 7
    COMPONENT  shift, and go to state 8

    def_list  go to state 9
    def       go to state 10
    type      go to state 11


State 1

   87 type: INT .

    $default  reduce using rule 87 (type)


State 2

   88 type: UINT .

    $default  reduce using rule 88 (type)


State 3

   89 type: FLOAT .

    $default  reduce using rule 89 (type)


State 4

   90 type: BOOL .

    $default  reduce using rule 90 (type)


State 5

   91 type: VEC3 .

    $default  reduce using rule 91 (type)


State 6

   92 type: VOID .

    $default  reduce using rule 92 (type)


State 7

    3 def: ENTITY . IDENTIFIER message_block

    IDENTIFIER  shift, and go to state 12


State 8

    4 def: COMPONENT . IDENTIFIER message_block

    IDENTIFIER  shift, and go to state 13


State 9

    0 $accept: def_list . $end
    2 def_list: def_list . def

    $end       shift, and go to state 14
    INT        shift, and go to state 1
    UINT       shift, and go to state 2
    FLOAT      shift, and go to state 3
    BOOL       shift, and go to state 4
    VEC3       shift, and go to state 5
    VOID       shift, and go to state 6
    ENTITY     shift, and go to state 7
    COMPONENT  shift, and go to state 8

    def   go to state 15
    type  go to state 11


State 10

    1 def_list: def .

    $default  reduce using rule 1 (def_list)


State 11

    5 def: type . IDENTIFIER '(' param_list ')' block

    IDENTIFIER  shift, and go to state 16


State 12

    3 def: ENTITY IDENTIFIER . message_block

    '{'  shift, and go to state 17

    message_block  go to state 18


State 13

    4 def: COMPONENT IDENTIFIER . message_block

    '{'  shift, and go to state 17

    message_block  go to state 19


State 14

    0 $accept: def_list $end .

    $default  accept


State 15

    2 def_list: def_list def .

    $default  reduce using rule 2 (def_list)


State 16

    5 def: type IDENTIFIER . '(' param_list ')' block

    '('  shift, and go to state 20


State 17

    6 message_block: '{' . '}'
    7              | '{' . message_list '}'

    INT    shift, and go to state 1
    UINT   shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VEC3   shift, and go to state 5
    VOID   shift, and go to state 6
    '}'    shift, and go to state 21
    '#'    shift, and go to state 22

    message_list  go to state 23
    message_prop  go to state 24
    type          go to state 25


State 18

    3 def: ENTITY IDENTIFIER message_block .

    $default  reduce using rule 3 (def)


State 19

    4 def: COMPONENT IDENTIFIER message_block .

    $default  reduce using rule 4 (def)


State 20

    5 def: type IDENTIFIER '(' . param_list ')' block

    INT    shift, and go to state 1
    UINT   shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VEC3   shift, and go to state 5
    VOID   shift, and go to state 6

    $default  reduce using rule 13 (param_list)

    param_list  go to state 26
    type        go to state 27


State 21

    6 message_block: '{' '}' .

    $default  reduce using rule 6 (message_block)


State 22

   10 message_prop: '#' . IDENTIFIER '(' param_list ')' block

    IDENTIFIER  shift, and go to state 28


State 23

    7 message_block: '{' message_list . '}'
    9 message_list: message_list . message_prop

    INT    shift, and go to state 1
    UINT   shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VEC3   shift, and go to state 5
    VOID   shift, and go to state 6
    '}'    shift, and go to state 29
    '#'    shift, and go to state 22

    message_prop  go to state 30
    type          go to state 25


State 24

    8 message_list: message_prop .

    $default  reduce using rule 8 (message_list)


State 25

   11 message_prop: type . '#' IDENTIFIER ';'
   12             | type . '#' IDENTIFIER '=' expr ';'

    '#'  shift, and go to state 31


State 26

    5 def: type IDENTIFIER '(' param_list . ')' block
   15 param_list: param_list . ',' type IDENTIFIER

    ')'  shift, and go to state 32
    ','  shift, and go to state 33


State 27

   14 param_list: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 34


State 28

   10 message_prop: '#' IDENTIFIER . '(' param_list ')' block

    '('  shift, and go to state 35


State 29

    7 message_block: '{' message_list '}' .

    $default  reduce using rule 7 (message_block)


State 30

    9 message_list: message_list message_prop .

    $default  reduce using rule 9 (message_list)


State 31

   11 message_prop: type '#' . IDENTIFIER ';'
   12             | type '#' . IDENTIFIER '=' expr ';'

    IDENTIFIER  shift, and go to state 36


State 32

    5 def: type IDENTIFIER '(' param_list ')' . block

    '{'  shift, and go to state 37

    block  go to state 38


State 33

   15 param_list: param_list ',' . type IDENTIFIER

    INT    shift, and go to state 1
    UINT   shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VEC3   shift, and go to state 5
    VOID   shift, and go to state 6

    type  go to state 39


State 34

   14 param_list: type IDENTIFIER .

    $default  reduce using rule 14 (param_list)


State 35

   10 message_prop: '#' IDENTIFIER '(' . param_list ')' block

    INT    shift, and go to state 1
    UINT   shift, and go to state 2
    FLOAT  shift, and go to state 3
    BOOL   shift, and go to state 4
    VEC3   shift, and go to state 5
    VOID   shift, and go to state 6

    $default  reduce using rule 13 (param_list)

    param_list  go to state 40
    type        go to state 27


State 36

   11 message_prop: type '#' IDENTIFIER . ';'
   12             | type '#' IDENTIFIER . '=' expr ';'

    '='  shift, and go to state 41
    ';'  shift, and go to state 42


State 37

   16 block: '{' . '}'
   17      | '{' . stmt_list '}'

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 48
    FOR            shift, and go to state 49
    WHILE          shift, and go to state 50
    DO             shift, and go to state 51
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57
    '{'            shift, and go to state 37
    '}'            shift, and go to state 58
    '@'            shift, and go to state 59

    block      go to state 60
    stmt_list  go to state 61
    stmt       go to state 62
    expr       go to state 63
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 38

    5 def: type IDENTIFIER '(' param_list ')' block .

    $default  reduce using rule 5 (def)


State 39

   15 param_list: param_list ',' type . IDENTIFIER

    IDENTIFIER  shift, and go to state 67


State 40

   10 message_prop: '#' IDENTIFIER '(' param_list . ')' block
   15 param_list: param_list . ',' type IDENTIFIER

    ')'  shift, and go to state 68
    ','  shift, and go to state 33


State 41

   12 message_prop: type '#' IDENTIFIER '=' . expr ';'

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 69
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 42

   11 message_prop: type '#' IDENTIFIER ';' .

    $default  reduce using rule 11 (message_prop)


State 43

   49 expr: IDENTIFIER . '=' expr
   50     | IDENTIFIER . ADD_ASSIGN expr
   51     | IDENTIFIER . SUB_ASSIGN expr
   52     | IDENTIFIER . MUL_ASSIGN expr
   53     | IDENTIFIER . DIV_ASSIGN expr
   54     | IDENTIFIER . MOD_ASSIGN expr
   55     | IDENTIFIER . LSHIFT_ASSIGN expr
   56     | IDENTIFIER . RSHIFT_ASSIGN expr
   57     | IDENTIFIER . AND_ASSIGN expr
   58     | IDENTIFIER . XOR_ASSIGN expr
   59     | IDENTIFIER . OR_ASSIGN expr
   68     | IDENTIFIER . '(' fun_params ')'
   69     | IDENTIFIER .

    '='            shift, and go to state 70
    OR_ASSIGN      shift, and go to state 71
    XOR_ASSIGN     shift, and go to state 72
    AND_ASSIGN     shift, and go to state 73
    RSHIFT_ASSIGN  shift, and go to state 74
    LSHIFT_ASSIGN  shift, and go to state 75
    MOD_ASSIGN     shift, and go to state 76
    DIV_ASSIGN     shift, and go to state 77
    MUL_ASSIGN     shift, and go to state 78
    SUB_ASSIGN     shift, and go to state 79
    ADD_ASSIGN     shift, and go to state 80
    '('            shift, and go to state 81

    $default  reduce using rule 69 (expr)


State 44

   76 literal: INT_LITERAL .

    $default  reduce using rule 76 (literal)


State 45

   78 literal: TRUE .

    $default  reduce using rule 78 (literal)


State 46

   79 literal: FALSE .

    $default  reduce using rule 79 (literal)


State 47

   77 literal: FLOAT_LITERAL .

    $default  reduce using rule 77 (literal)


State 48

   20 stmt: IF . '(' cond_expr ')' stmt
   21     | IF . '(' cond_expr ')' stmt ELSE stmt

    '('  shift, and go to state 82


State 49

   24 stmt: FOR . '(' expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty ')' stmt

    '('  shift, and go to state 83


State 50

   22 stmt: WHILE . '(' cond_expr ')' stmt

    '('  shift, and go to state 84


State 51

   23 stmt: DO . do_stmt WHILE '(' cond_expr ')' ';'

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 48
    FOR            shift, and go to state 49
    WHILE          shift, and go to state 50
    DO             shift, and go to state 51
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57
    '{'            shift, and go to state 37
    '@'            shift, and go to state 59

    block      go to state 60
    stmt       go to state 85
    do_stmt    go to state 86
    expr       go to state 63
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 52

   62 expr: '-' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 87
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 53

   60 expr: '!' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 88
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 54

   61 expr: '~' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 89
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 55

   64 expr: DEC . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 90
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 56

   63 expr: INC . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 91
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 57

   35 expr: '(' . expr ')'

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 92
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 58

   16 block: '{' '}' .

    $default  reduce using rule 16 (block)


State 59

   25 stmt: '@' . target_expr ':' component_expr '#' IDENTIFIER '=' expr ';'
   26     | '@' . target_expr ':' component_expr '#' IDENTIFIER '(' fun_params ')' ';'

    IDENTIFIER   shift, and go to state 93
    INT_LITERAL  shift, and go to state 94

    $default  reduce using rule 30 (target_expr)

    target_expr  go to state 95


State 60

   27 stmt: block .

    $default  reduce using rule 27 (stmt)


State 61

   17 block: '{' stmt_list . '}'
   19 stmt_list: stmt_list . stmt

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 48
    FOR            shift, and go to state 49
    WHILE          shift, and go to state 50
    DO             shift, and go to state 51
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57
    '{'            shift, and go to state 37
    '}'            shift, and go to state 96
    '@'            shift, and go to state 59

    block      go to state 60
    stmt       go to state 97
    expr       go to state 63
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 62

   18 stmt_list: stmt .

    $default  reduce using rule 18 (stmt_list)


State 63

   28 stmt: expr . ';'
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115
    ';'     shift, and go to state 116


State 64

   38 expr: cond_expr .

    $default  reduce using rule 38 (expr)


State 65

   67 expr: literal .

    $default  reduce using rule 67 (expr)


State 66

   36 expr: type . IDENTIFIER
   37     | type . IDENTIFIER '=' expr

    IDENTIFIER  shift, and go to state 117


State 67

   15 param_list: param_list ',' type IDENTIFIER .

    $default  reduce using rule 15 (param_list)


State 68

   10 message_prop: '#' IDENTIFIER '(' param_list ')' . block

    '{'  shift, and go to state 37

    block  go to state 118


State 69

   12 message_prop: type '#' IDENTIFIER '=' expr . ';'
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115
    ';'     shift, and go to state 119


State 70

   49 expr: IDENTIFIER '=' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 120
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 71

   59 expr: IDENTIFIER OR_ASSIGN . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 121
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 72

   58 expr: IDENTIFIER XOR_ASSIGN . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 122
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 73

   57 expr: IDENTIFIER AND_ASSIGN . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 123
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 74

   56 expr: IDENTIFIER RSHIFT_ASSIGN . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 124
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 75

   55 expr: IDENTIFIER LSHIFT_ASSIGN . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 125
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 76

   54 expr: IDENTIFIER MOD_ASSIGN . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 126
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 77

   53 expr: IDENTIFIER DIV_ASSIGN . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 127
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 78

   52 expr: IDENTIFIER MUL_ASSIGN . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 128
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 79

   51 expr: IDENTIFIER SUB_ASSIGN . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 129
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 80

   50 expr: IDENTIFIER ADD_ASSIGN . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 130
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 81

   68 expr: IDENTIFIER '(' . fun_params ')'

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    $default  reduce using rule 84 (fun_params)

    expr        go to state 131
    cond_expr   go to state 64
    literal     go to state 65
    fun_params  go to state 132
    type        go to state 66


State 82

   20 stmt: IF '(' . cond_expr ')' stmt
   21     | IF '(' . cond_expr ')' stmt ELSE stmt

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 133
    cond_expr  go to state 134
    literal    go to state 65
    type       go to state 66


State 83

   24 stmt: FOR '(' . expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty ')' stmt

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    $default  reduce using rule 80 (expr_or_empty)

    expr           go to state 135
    cond_expr      go to state 64
    literal        go to state 65
    expr_or_empty  go to state 136
    type           go to state 66


State 84

   22 stmt: WHILE '(' . cond_expr ')' stmt

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 133
    cond_expr  go to state 137
    literal    go to state 65
    type       go to state 66


State 85

   29 do_stmt: stmt .

    $default  reduce using rule 29 (do_stmt)


State 86

   23 stmt: DO do_stmt . WHILE '(' cond_expr ')' ';'

    WHILE  shift, and go to state 138


State 87

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   62     | '-' expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    $default  reduce using rule 62 (expr)


State 88

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   60     | '!' expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    DEC  shift, and go to state 114
    INC  shift, and go to state 115

    $default  reduce using rule 60 (expr)


State 89

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   61     | '~' expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    DEC  shift, and go to state 114
    INC  shift, and go to state 115

    $default  reduce using rule 61 (expr)


State 90

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   64     | DEC expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    DEC  shift, and go to state 114
    INC  shift, and go to state 115

    $default  reduce using rule 64 (expr)


State 91

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   63     | INC expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    DEC  shift, and go to state 114
    INC  shift, and go to state 115

    $default  reduce using rule 63 (expr)


State 92

   35 expr: '(' expr . ')'
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115
    ')'     shift, and go to state 139


State 93

   31 target_expr: IDENTIFIER .

    $default  reduce using rule 31 (target_expr)


State 94

   32 target_expr: INT_LITERAL .

    $default  reduce using rule 32 (target_expr)


State 95

   25 stmt: '@' target_expr . ':' component_expr '#' IDENTIFIER '=' expr ';'
   26     | '@' target_expr . ':' component_expr '#' IDENTIFIER '(' fun_params ')' ';'

    ':'  shift, and go to state 140


State 96

   17 block: '{' stmt_list '}' .

    $default  reduce using rule 17 (block)


State 97

   19 stmt_list: stmt_list stmt .

    $default  reduce using rule 19 (stmt_list)


State 98

   47 expr: expr OR . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 141
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 99

   46 expr: expr AND . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 142
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 100

   48 expr: expr '^' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 143
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 101

   71 cond_expr: expr NEQ . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 144
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 102

   70 cond_expr: expr EQ . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 145
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 103

   74 cond_expr: expr '<' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 146
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 104

   75 cond_expr: expr '>' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 147
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 105

   73 cond_expr: expr GTE . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 148
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 106

   72 cond_expr: expr LTE . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 149
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 107

   45 expr: expr RSHIFT . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 150
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 108

   44 expr: expr LSHIFT . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 151
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 109

   39 expr: expr '+' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 152
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 110

   40 expr: expr '-' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 153
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 111

   41 expr: expr '*' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 154
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 112

   42 expr: expr '/' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 155
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 113

   43 expr: expr '%' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 156
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 114

   66 expr: expr DEC .

    $default  reduce using rule 66 (expr)


State 115

   65 expr: expr INC .

    $default  reduce using rule 65 (expr)


State 116

   28 stmt: expr ';' .

    $default  reduce using rule 28 (stmt)


State 117

   36 expr: type IDENTIFIER .
   37     | type IDENTIFIER . '=' expr

    '='  shift, and go to state 157

    $default  reduce using rule 36 (expr)


State 118

   10 message_prop: '#' IDENTIFIER '(' param_list ')' block .

    $default  reduce using rule 10 (message_prop)


State 119

   12 message_prop: type '#' IDENTIFIER '=' expr ';' .

    $default  reduce using rule 12 (message_prop)


State 120

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   49     | IDENTIFIER '=' expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 49 (expr)


State 121

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   59     | IDENTIFIER OR_ASSIGN expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 59 (expr)


State 122

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   58     | IDENTIFIER XOR_ASSIGN expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 58 (expr)


State 123

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   57     | IDENTIFIER AND_ASSIGN expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 57 (expr)


State 124

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   56     | IDENTIFIER RSHIFT_ASSIGN expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 56 (expr)


State 125

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   55     | IDENTIFIER LSHIFT_ASSIGN expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 55 (expr)


State 126

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   54     | IDENTIFIER MOD_ASSIGN expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 54 (expr)


State 127

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   53     | IDENTIFIER DIV_ASSIGN expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 53 (expr)


State 128

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   52     | IDENTIFIER MUL_ASSIGN expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 52 (expr)


State 129

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   51     | IDENTIFIER SUB_ASSIGN expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 51 (expr)


State 130

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   50     | IDENTIFIER ADD_ASSIGN expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 50 (expr)


State 131

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr
   85 fun_params: expr .

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 85 (fun_params)


State 132

   68 expr: IDENTIFIER '(' fun_params . ')'
   86 fun_params: fun_params . ',' expr

    ')'  shift, and go to state 158
    ','  shift, and go to state 159


State 133

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115


State 134

   20 stmt: IF '(' cond_expr . ')' stmt
   21     | IF '(' cond_expr . ')' stmt ELSE stmt
   38 expr: cond_expr .

    ')'  shift, and go to state 160

    $default  reduce using rule 38 (expr)


State 135

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr
   81 expr_or_empty: expr .

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 81 (expr_or_empty)


State 136

   24 stmt: FOR '(' expr_or_empty . ';' cond_expr_or_empty ';' expr_or_empty ')' stmt

    ';'  shift, and go to state 161


State 137

   22 stmt: WHILE '(' cond_expr . ')' stmt
   38 expr: cond_expr .

    ')'  shift, and go to state 162

    $default  reduce using rule 38 (expr)


State 138

   23 stmt: DO do_stmt WHILE . '(' cond_expr ')' ';'

    '('  shift, and go to state 163


State 139

   35 expr: '(' expr ')' .

    $default  reduce using rule 35 (expr)


State 140

   25 stmt: '@' target_expr ':' . component_expr '#' IDENTIFIER '=' expr ';'
   26     | '@' target_expr ':' . component_expr '#' IDENTIFIER '(' fun_params ')' ';'

    IDENTIFIER  shift, and go to state 164

    $default  reduce using rule 33 (component_expr)

    component_expr  go to state 165


State 141

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   47     | expr OR expr .
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 47 (expr)


State 142

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   46     | expr AND expr .
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 46 (expr)


State 143

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   48     | expr '^' expr .
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 48 (expr)


State 144

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   71          | expr NEQ expr .
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 71 (cond_expr)


State 145

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   70          | expr EQ expr .
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    NEQ  error (nonassociative)
    EQ   error (nonassociative)

    $default  reduce using rule 70 (cond_expr)


State 146

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   74          | expr '<' expr .
   75          | expr . '>' expr

    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    GTE  error (nonassociative)
    LTE  error (nonassociative)

    $default  reduce using rule 74 (cond_expr)


State 147

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr
   75          | expr '>' expr .

    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    GTE  error (nonassociative)
    LTE  error (nonassociative)

    $default  reduce using rule 75 (cond_expr)


State 148

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   73          | expr GTE expr .
   74          | expr . '<' expr
   75          | expr . '>' expr

    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    GTE  error (nonassociative)
    LTE  error (nonassociative)

    $default  reduce using rule 73 (cond_expr)


State 149

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   72          | expr LTE expr .
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    '<'  error (nonassociative)
    '>'  error (nonassociative)
    GTE  error (nonassociative)
    LTE  error (nonassociative)

    $default  reduce using rule 72 (cond_expr)


State 150

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   45     | expr RSHIFT expr .
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    '+'  shift, and go to state 109
    '-'  shift, and go to state 110
    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    DEC  shift, and go to state 114
    INC  shift, and go to state 115

    $default  reduce using rule 45 (expr)


State 151

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   44     | expr LSHIFT expr .
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    '+'  shift, and go to state 109
    '-'  shift, and go to state 110
    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    DEC  shift, and go to state 114
    INC  shift, and go to state 115

    $default  reduce using rule 44 (expr)


State 152

   39 expr: expr . '+' expr
   39     | expr '+' expr .
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    DEC  shift, and go to state 114
    INC  shift, and go to state 115

    $default  reduce using rule 39 (expr)


State 153

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   40     | expr '-' expr .
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    DEC  shift, and go to state 114
    INC  shift, and go to state 115

    $default  reduce using rule 40 (expr)


State 154

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   41     | expr '*' expr .
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    DEC  shift, and go to state 114
    INC  shift, and go to state 115

    $default  reduce using rule 41 (expr)


State 155

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   42     | expr '/' expr .
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    DEC  shift, and go to state 114
    INC  shift, and go to state 115

    $default  reduce using rule 42 (expr)


State 156

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   43     | expr '%' expr .
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    DEC  shift, and go to state 114
    INC  shift, and go to state 115

    $default  reduce using rule 43 (expr)


State 157

   37 expr: type IDENTIFIER '=' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 166
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 158

   68 expr: IDENTIFIER '(' fun_params ')' .

    $default  reduce using rule 68 (expr)


State 159

   86 fun_params: fun_params ',' . expr

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 167
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 160

   20 stmt: IF '(' cond_expr ')' . stmt
   21     | IF '(' cond_expr ')' . stmt ELSE stmt

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 48
    FOR            shift, and go to state 49
    WHILE          shift, and go to state 50
    DO             shift, and go to state 51
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57
    '{'            shift, and go to state 37
    '@'            shift, and go to state 59

    block      go to state 60
    stmt       go to state 168
    expr       go to state 63
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 161

   24 stmt: FOR '(' expr_or_empty ';' . cond_expr_or_empty ';' expr_or_empty ')' stmt

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    $default  reduce using rule 82 (cond_expr_or_empty)

    expr                go to state 133
    cond_expr           go to state 169
    literal             go to state 65
    cond_expr_or_empty  go to state 170
    type                go to state 66


State 162

   22 stmt: WHILE '(' cond_expr ')' . stmt

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 48
    FOR            shift, and go to state 49
    WHILE          shift, and go to state 50
    DO             shift, and go to state 51
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57
    '{'            shift, and go to state 37
    '@'            shift, and go to state 59

    block      go to state 60
    stmt       go to state 171
    expr       go to state 63
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 163

   23 stmt: DO do_stmt WHILE '(' . cond_expr ')' ';'

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 133
    cond_expr  go to state 172
    literal    go to state 65
    type       go to state 66


State 164

   34 component_expr: IDENTIFIER .

    $default  reduce using rule 34 (component_expr)


State 165

   25 stmt: '@' target_expr ':' component_expr . '#' IDENTIFIER '=' expr ';'
   26     | '@' target_expr ':' component_expr . '#' IDENTIFIER '(' fun_params ')' ';'

    '#'  shift, and go to state 173


State 166

   37 expr: type IDENTIFIER '=' expr .
   39     | expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 37 (expr)


State 167

   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr
   86 fun_params: fun_params ',' expr .

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115

    $default  reduce using rule 86 (fun_params)


State 168

   20 stmt: IF '(' cond_expr ')' stmt .
   21     | IF '(' cond_expr ')' stmt . ELSE stmt

    ELSE  shift, and go to state 174

    $default  reduce using rule 20 (stmt)


State 169

   38 expr: cond_expr .
   83 cond_expr_or_empty: cond_expr .

    ';'       reduce using rule 83 (cond_expr_or_empty)
    $default  reduce using rule 38 (expr)


State 170

   24 stmt: FOR '(' expr_or_empty ';' cond_expr_or_empty . ';' expr_or_empty ')' stmt

    ';'  shift, and go to state 175


State 171

   22 stmt: WHILE '(' cond_expr ')' stmt .

    $default  reduce using rule 22 (stmt)


State 172

   23 stmt: DO do_stmt WHILE '(' cond_expr . ')' ';'
   38 expr: cond_expr .

    ')'  shift, and go to state 176

    $default  reduce using rule 38 (expr)


State 173

   25 stmt: '@' target_expr ':' component_expr '#' . IDENTIFIER '=' expr ';'
   26     | '@' target_expr ':' component_expr '#' . IDENTIFIER '(' fun_params ')' ';'

    IDENTIFIER  shift, and go to state 177


State 174

   21 stmt: IF '(' cond_expr ')' stmt ELSE . stmt

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 48
    FOR            shift, and go to state 49
    WHILE          shift, and go to state 50
    DO             shift, and go to state 51
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57
    '{'            shift, and go to state 37
    '@'            shift, and go to state 59

    block      go to state 60
    stmt       go to state 178
    expr       go to state 63
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 175

   24 stmt: FOR '(' expr_or_empty ';' cond_expr_or_empty ';' . expr_or_empty ')' stmt

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    $default  reduce using rule 80 (expr_or_empty)

    expr           go to state 135
    cond_expr      go to state 64
    literal        go to state 65
    expr_or_empty  go to state 179
    type           go to state 66


State 176

   23 stmt: DO do_stmt WHILE '(' cond_expr ')' . ';'

    ';'  shift, and go to state 180


State 177

   25 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER . '=' expr ';'
   26     | '@' target_expr ':' component_expr '#' IDENTIFIER . '(' fun_params ')' ';'

    '='  shift, and go to state 181
    '('  shift, and go to state 182


State 178

   21 stmt: IF '(' cond_expr ')' stmt ELSE stmt .

    $default  reduce using rule 21 (stmt)


State 179

   24 stmt: FOR '(' expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty . ')' stmt

    ')'  shift, and go to state 183


State 180

   23 stmt: DO do_stmt WHILE '(' cond_expr ')' ';' .

    $default  reduce using rule 23 (stmt)


State 181

   25 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '=' . expr ';'

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    expr       go to state 184
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 182

   26 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '(' . fun_params ')' ';'

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57

    $default  reduce using rule 84 (fun_params)

    expr        go to state 131
    cond_expr   go to state 64
    literal     go to state 65
    fun_params  go to state 185
    type        go to state 66


State 183

   24 stmt: FOR '(' expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty ')' . stmt

    IDENTIFIER     shift, and go to state 43
    INT_LITERAL    shift, and go to state 44
    TRUE           shift, and go to state 45
    FALSE          shift, and go to state 46
    FLOAT_LITERAL  shift, and go to state 47
    INT            shift, and go to state 1
    UINT           shift, and go to state 2
    FLOAT          shift, and go to state 3
    BOOL           shift, and go to state 4
    VEC3           shift, and go to state 5
    VOID           shift, and go to state 6
    IF             shift, and go to state 48
    FOR            shift, and go to state 49
    WHILE          shift, and go to state 50
    DO             shift, and go to state 51
    '-'            shift, and go to state 52
    '!'            shift, and go to state 53
    '~'            shift, and go to state 54
    DEC            shift, and go to state 55
    INC            shift, and go to state 56
    '('            shift, and go to state 57
    '{'            shift, and go to state 37
    '@'            shift, and go to state 59

    block      go to state 60
    stmt       go to state 186
    expr       go to state 63
    cond_expr  go to state 64
    literal    go to state 65
    type       go to state 66


State 184

   25 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '=' expr . ';'
   39 expr: expr . '+' expr
   40     | expr . '-' expr
   41     | expr . '*' expr
   42     | expr . '/' expr
   43     | expr . '%' expr
   44     | expr . LSHIFT expr
   45     | expr . RSHIFT expr
   46     | expr . AND expr
   47     | expr . OR expr
   48     | expr . '^' expr
   65     | expr . INC
   66     | expr . DEC
   70 cond_expr: expr . EQ expr
   71          | expr . NEQ expr
   72          | expr . LTE expr
   73          | expr . GTE expr
   74          | expr . '<' expr
   75          | expr . '>' expr

    OR      shift, and go to state 98
    AND     shift, and go to state 99
    '^'     shift, and go to state 100
    NEQ     shift, and go to state 101
    EQ      shift, and go to state 102
    '<'     shift, and go to state 103
    '>'     shift, and go to state 104
    GTE     shift, and go to state 105
    LTE     shift, and go to state 106
    RSHIFT  shift, and go to state 107
    LSHIFT  shift, and go to state 108
    '+'     shift, and go to state 109
    '-'     shift, and go to state 110
    '*'     shift, and go to state 111
    '/'     shift, and go to state 112
    '%'     shift, and go to state 113
    DEC     shift, and go to state 114
    INC     shift, and go to state 115
    ';'     shift, and go to state 187


State 185

   26 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '(' fun_params . ')' ';'
   86 fun_params: fun_params . ',' expr

    ')'  shift, and go to state 188
    ','  shift, and go to state 159


State 186

   24 stmt: FOR '(' expr_or_empty ';' cond_expr_or_empty ';' expr_or_empty ')' stmt .

    $default  reduce using rule 24 (stmt)


State 187

   25 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '=' expr ';' .

    $default  reduce using rule 25 (stmt)


State 188

   26 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '(' fun_params ')' . ';'

    ';'  shift, and go to state 189


State 189

   26 stmt: '@' target_expr ':' component_expr '#' IDENTIFIER '(' fun_params ')' ';' .

    $default  reduce using rule 26 (stmt)
