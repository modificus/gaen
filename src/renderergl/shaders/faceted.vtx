#ifdef OPENGL3

in vec4 vPosition;
in vec3 vNormal;

uniform mat4 umMVP;
uniform mat3 umNormal;
uniform vec4 uvColor;
uniform vec3 uvLightDirection;
uniform vec4 uvLightColor;

out vec4 vColor;

void main()
{
    vec3 normalTrans = normalize(umNormal * vNormal);
    float intensity = max(dot(normalTrans, uvLightDirection), 0.0);
    intensity += min(intensity + 0.3, 1.0);
    vColor = intensity * uvColor;
    //vColor = vec4((umNormal * vNormal), 1.0);
    //vColor = vec4(dot(uvLightDirection, normalTrans));
    //vColor = abs(dot(uvLightDirection, normalTrans)) * uvColor;
    //vColor = vec4(abs(uvLightDirection), 1.0);
    //vColor = 0.5 * uvColor;
    //vColor = vec4(1.0, 1.0, 0.0, 0.6);
    gl_Position = umMVP * vPosition;
};


#else //#ifdef OPENGL3
#ifdef PLATFORM_IOS
precision mediump float;
#endif
attribute vec4 vPosition;
attribute vec3 vNormal;

uniform mat4 umMVP;
uniform mat3 umNormal;
uniform vec4 uvColor;
uniform vec3 uvLightDirection;
uniform vec4 uvLightColor;

varying vec4 vColor;

void main()
{
    vec3 normalTrans = normalize(umNormal * vNormal);
    float intensity = max(dot(normalTrans, uvLightDirection), 0.0);
    intensity += min(intensity + 0.3, 1.0);
    vColor = intensity * uvColor;
    gl_Position = umMVP * vPosition;
};
#endif //#else //#ifdef OPENGL3
