
layout (local_size_x = 16, local_size_y = 16) in;

// frameBuffer output
layout (rgba8, binding=0) uniform image2D frameBuffer;

// Voxel world data
layout (rg32ui, binding=1) uniform uimageBuffer voxelData;

void main(void)
{
    ivec2 coord = ivec2(gl_WorkGroupSize.x * gl_NumWorkGroups.x,
                        gl_WorkGroupSize.y * gl_NumWorkGroups.y);

    vec2 imageSize = vec2(coord);

    vec4 color = vec4(gl_GlobalInvocationID.xy / imageSize, 0.0, 0.0);

    uvec4 voxel = imageLoad(voxelData, int(gl_GlobalInvocationID.y * coord.x + gl_GlobalInvocationID.x));

    imageStore(frameBuffer,
               ivec2(gl_GlobalInvocationID.xy),
               vec4(voxel.xy, 0.0, 1.0));
//               vec4(1.0, 1.0, 1.0, 1.0));
    
}
