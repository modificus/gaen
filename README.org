* Gaen Concurrency Engine
A cross platform, [[http://en.wikipedia.org/wiki/Entity_component_system][component based game engine]] that automates CPU
concurrency.

Game designers create components and entities and designate data
dependencies. The engine load balances these entities across all
available cores. Running on a machine with more cores will
automatically improve CPU bound performance without any code
modifications.

Gaen is licensed under the terms of the [[http://en.wikipedia.org/wiki/Zlib_License][zlib License]].

Check out [[http://gaen.org][gaen.org]] for more gory details, but here's the
gist.

** Compose Scripting Language
To enable rapid prototyping and empower non-C++ programmers to create
with Gaen, there is Compose. It is a C-like language with lots of
syntactic sugar around components, entities and message passing. It
eliminates the boiler plate verbosity that comes with forcing C++ into
a message passing, component based model.

The language is designed to get compiled into C++. Plans for a VM
are in the works, but right now you run the cmpc compiler to
covert your .cmp files to .cpp files.

In shipping game code, this is what you want since the C++ compiler
will give you great performance gains over an interpreted scripting
language. However, it is pretty darn useful to prototype scripts
without stopping/starting your game, and as such a VM is in the works
so that Gaen can support the best of both worlds. You will use
dynamic scripting while edit/debug/testing scripts, and compile
to C++ when they are more nailed down.

** Platforms
Active development is for Windows, and that platform will generally
always be functional. The engine is designed for 64 bit, but a 32 bit
builds work as well.

OSX and iOS are also supported. Linux support is forthcoming. I don't
expect there to be any issues with the port, as going to OSX has made
me work through most of the Posix required changes. But, alas, I
haven't ported to Linux yet.

[[http://en.wikipedia.org/wiki/C++11][C++11]] features are used extensively, so you must have a recent
compiler.  On Windows this means VC 2013 or above. On OSX, the most
recent Xcode will serve you well. On Linux, this will mean at least
GCC 4.8.

